name: Debug Results Page

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install playwright
          playwright install chromium
      
      - name: Run debug script
        run: |
          # Create the debug script
          cat > debug_results.py << 'EOF'
          import asyncio
          from playwright.async_api import async_playwright

          async def debug_results():
              async with async_playwright() as p:
                  browser = await p.chromium.launch(headless=True)
                  page = await browser.new_page()
                  
                  # Go directly to a search results URL
                  url = "https://www.aadvantagehotels.com/search?adults=2&checkIn=07%2F24%2F2025&checkOut=07%2F25%2F2025&children=0&currency=USD&filters=%7B%7D&language=en&latitude=13.750057&locationType=CITY&longitude=100.49881&mode=earn&numberOfChildren=0&placeId=AGODA_CITY%7C9395&program=aadvantage&promotion&query=Bangkok%2C%20Thailand&rooms=1&sort=featured&source=AGODA"
                  
                  print("Loading search results page...")
                  await page.goto(url)
                  await asyncio.sleep(5)  # Wait for content
                  
                  # Take screenshot
                  await page.screenshot(path="results_page.png", full_page=True)
                  print("Screenshot saved: results_page.png")
                  
                  # Try to find any elements that might be hotels
                  selectors_to_try = [
                      'div[class*="hotel"]',
                      'div[class*="property"]',
                      'div[class*="card"]',
                      'article',
                      'section > div > div',
                      '[data-testid*="hotel"]',
                      '[data-testid*="property"]',
                      '[data-testid*="card"]',
                      'a[href*="/hotel"]',
                      'a[href*="/property"]'
                  ]
                  
                  for sel in selectors_to_try:
                      elements = await page.query_selector_all(sel)
                      if elements and len(elements) > 0:
                          print(f"Found {len(elements)} elements with selector: {sel}")
                          # Get text from first element
                          if elements:
                              try:
                                  text = await elements[0].text_content()
                                  print(f"  First element text: {text[:200] if text else 'No text'}...")
                              except:
                                  pass
                  
                  # Look for specific text patterns
                  print("\nLooking for hotel-related text...")
                  page_text = await page.text_content('body')
                  if 'hotel' in page_text.lower():
                      print("✓ Found 'hotel' in page text")
                  if 'property' in page_text.lower():
                      print("✓ Found 'property' in page text")
                  if 'per night' in page_text.lower():
                      print("✓ Found 'per night' in page text")
                  if 'book now' in page_text.lower():
                      print("✓ Found 'book now' in page text")
                  
                  # Save HTML
                  html = await page.content()
                  with open("results_page.html", "w", encoding="utf-8") as f:
                      f.write(html)
                  print("\nHTML saved: results_page.html")
                  
                  await browser.close()

          if __name__ == "__main__":
              asyncio.run(debug_results())
          EOF
          
          # Run it
          python debug_results.py
      
      - name: Upload debug files
        uses: actions/upload-artifact@v4
        with:
          name: debug-files
          path: |
            *.png
            *.html
